{"version":3,"sources":["components/Navbar.js","components/Home.js","components/actions/cartActions.js","components/actions/action-types/cart-actions.js","components/Recipe.js","components/Cart.js","App.js","components/reducers/cartReducer.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Home","handleClick","id","props","addToCart","itemList","this","items","map","item","key","src","img","alt","title","onClick","desc","price","Component","connect","state","dispatch","type","Recipe","handleChecked","e","target","checked","addShipping","subShipping","refs","shipping","ref","onChange","total","addedItems","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","length","quantity","App","exact","path","component","initState","cartReducer","action","addedItem","find","existed_item","newTotal","itemToRemove","new_items","filter","console","log","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85a49a68.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo left\"><i className=\"material-icons md-48\">store</i></Link>\r\n\r\n                <ul className=\"right\">\r\n                    <li><Link to=\"/\">Shop</Link></li>\r\n                    <li><Link to=\"/cart\">My cart</Link></li>\r\n                    <li><Link to=\"/cart\"><i className=\"material-icons\">shopping_cart</i></Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { addToCart } from './actions/cartActions';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    handleClick = (id) => {\r\n        this.props.addToCart(id);\r\n    }\r\n    \r\n    render(){\r\n        let itemList = this.props.items.map(item=>{\r\n            return(\r\n                <div className=\"card\" key={item.id}>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.img} alt={item.title}/>\r\n                            <span className=\"card-title\">{item.title}</span>\r\n                            <span to=\"/\" className=\"btn-floating halfway-fab waves-effect waves-light red\" onClick={()=>{this.handleClick(item.id)}}><i className=\"material-icons\">add</i></span>\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                            <p>{item.desc}</p>\r\n                            <p><b>Price: {item.price}$</b></p>\r\n                        </div>\r\n                 </div>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h3 className=\"center\">Archer's Items</h3>\r\n                <div className=\"box\">\r\n                    {itemList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        items: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (id)=> {dispatch(addToCart(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING,SUB_SHIPPING} from './action-types/cart-actions'\r\n\r\n//add cart action\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n//remove item action\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n//subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n//add qt action\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}\r\n\r\n//add shipping\r\nexport const addShipping=()=>{\r\n    return{\r\n        type: ADD_SHIPPING\r\n    }\r\n}\r\n\r\n//sub shipping\r\nexport const subShipping=()=>{\r\n    return{\r\n        type: SUB_SHIPPING\r\n    }\r\n}","//Types should be in const to avoid typos and duplication since it's a string and could be easily miss spelled\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';\r\nexport const SUB_SHIPPING = 'SUB_SHIPPING';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addShipping,subShipping} from './actions/cartActions'\r\nclass Recipe extends Component{\r\n    \r\n    componentWillUnmount() {\r\n         if(this.refs.shipping.checked)\r\n              this.props.subShipping()\r\n    }\r\n\r\n    handleChecked = (e)=>{\r\n        if(e.target.checked){\r\n            this.props.addShipping();\r\n        }\r\n        else{\r\n            this.props.subShipping();\r\n        }\r\n    }\r\n\r\n    render(){\r\n  \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"collection\">\r\n                    <li className=\"collection-item\">\r\n                            <label>\r\n                                <input type=\"checkbox\" ref=\"shipping\" onChange= {this.handleChecked} />\r\n                                <span>Shipping(+6$)</span>\r\n                            </label>\r\n                        </li>\r\n                        <li className=\"collection-item\"><b>Total: {this.props.total} $</b></li>\r\n                    </div>\r\n                    <div className=\"checkout\">\r\n                        <button className=\"waves-effect waves-light btn\">Checkout</button>\r\n                    </div>\r\n                 </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addShipping: ()=>{dispatch(addShipping())},\r\n        subShipping: ()=>{dispatch(subShipping())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Recipe)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeItem,addQuantity,subtractQuantity} from './actions/cartActions'\r\nimport Recipe from './Recipe'\r\n\r\nclass Cart extends Component{\r\n\r\n    //to remove the item completely\r\n    handleRemove = (id)=>{\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n\r\n    render(){\r\n              \r\n        let addedItems = this.props.items.length ?\r\n            (  \r\n                this.props.items.map(item=>{\r\n                    return(\r\n                       \r\n                        <li className=\"collection-item avatar\" key={item.id}>\r\n                                    <div className=\"item-img\"> \r\n                                        <img src={item.img} alt={item.img} className=\"\"/>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"item-desc\">\r\n                                        <span className=\"title\">{item.title}</span>\r\n                                        <p>{item.desc}</p>\r\n                                        <p><b>Price: {item.price}$</b></p> \r\n                                        <p>\r\n                                            <b>Quantity: {item.quantity}</b> \r\n                                        </p>\r\n                                        <div className=\"add-remove\">\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleAddQuantity(item.id)}}>arrow_drop_up</i></Link>\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleSubtractQuantity(item.id)}}>arrow_drop_down</i></Link>\r\n                                        </div>\r\n                                        <button className=\"waves-effect waves-light btn pink remove\" onClick={()=>{this.handleRemove(item.id)}}>Remove</button>\r\n                                    </div>\r\n                                    \r\n                                </li>\r\n                         \r\n                    )\r\n                })\r\n            ):\r\n\r\n             (\r\n                <p>Nothing.</p>\r\n             )\r\n       return(\r\n            <div className=\"container\">\r\n                <div className=\"cart\">\r\n                    <h5>You have ordered:</h5>\r\n                    <ul className=\"collection\">\r\n                        {addedItems}\r\n                    </ul>\r\n                </div>    \r\n                <Recipe /> \r\n            </div>\r\n       )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems,\r\n        //addedItems: state.addedItems\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)\r\n","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/cart\" component={Cart}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING,SUB_SHIPPING } from '../actions/action-types/cart-actions'\r\n\r\nconst initState = {\r\n    items: [\r\n        {id:1,title:'Winter body', desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\", price:110,img:'https://res.cloudinary.com/kevinzou/image/upload/v1592066196/image/shoes/item1_ugu1dz.jpg'},\r\n        {id:2,title:'Adidas', desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\", price:80,img: 'https://res.cloudinary.com/kevinzou/image/upload/v1592066196/image/shoes/item2_p9prkr.jpg'},\r\n        {id:3,title:'Vans', desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",price:120,img: 'https://res.cloudinary.com/kevinzou/image/upload/v1592066197/image/shoes/item3_uvebyv.jpg'},\r\n        {id:4,title:'White', desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\", price:260,img:'https://res.cloudinary.com/kevinzou/image/upload/v1592066197/image/shoes/item4_nnnhii.jpg'},\r\n        {id:5,title:'Cropped-sho', desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\", price:160,img: 'https://res.cloudinary.com/kevinzou/image/upload/v1592066196/image/shoes/item5_zwtg6k.jpg'},\r\n        {id:6,title:'Blues', desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",price:90,img: 'https://res.cloudinary.com/kevinzou/image/upload/v1592066197/image/shoes/item6_lfinqi.jpg'}\r\n    ],\r\n    addedItems:[],\r\n    total: 0\r\n}\r\n\r\n\r\nconst cartReducer= (state = initState,action)=>{\r\n   \r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n         let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n         if(existed_item)\r\n         {\r\n            addedItem.quantity += 1 \r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price \r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1 \r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){  \r\n        let addedItem = state.items.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type=== ADD_SHIPPING){\r\n        return{\r\n            ...state,\r\n            total: state.total + 6\r\n        }\r\n    }\r\n\r\n    if(action.type=== SUB_SHIPPING){\r\n        return{\r\n            ...state,\r\n            total: state.total - 6\r\n        }\r\n    }\r\n\r\n    else{\r\n        return state\r\n    }\r\n};\r\n\r\nexport default cartReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport cartReducer from './components/reducers/cartReducer';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}